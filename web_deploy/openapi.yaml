openapi: 3.0.0
info:
  version: 0.0.1
  title: CrashTeam KazanExpress Heaven Gate API
  description: |
    CrashTeam Dev Heaven Gate API
  termsOfService: http://marketdb.ru/terms-of-use/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://{subdomain}.marketdb.ru/{version}
    variables:
      subdomain:
        default: napi
      version:
        enum:
          - v1
        default: v1
security:
  - bearer: []
paths:
  /billing/payments:
    get:
      summary: Получение списка платежей пользователя
      operationId: getPayments
      tags:
        - payment
      parameters:
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/collectionLimit'
        - $ref: '#/components/parameters/collectionOffset'
      responses:
        '200':
          description: Получен список платежей пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountPayment'
          headers:
            Pagination-Total:
              $ref: '#/components/headers/Pagination-Total'
            Pagination-Limit:
              $ref: '#/components/headers/Pagination-Limit'
            Pagination-Offset:
              $ref: '#/components/headers/Pagination-Offset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Платежи не найдены
    post:
      summary: Создание платежа
      operationId: createPayment
      tags:
        - payment
      parameters:
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/idempotencyKey'
      description: |
        Создание платежа.
      requestBody:
        $ref: '#/components/requestBodies/CreatePayment'
      responses:
        '201':
          description: Платеж успешно создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /billing/payments/{id}:
    get:
      summary: Данные платежа
      operationId: getPayment
      tags:
        - payment
      parameters:
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/paymentResourceId'
      responses:
        '200':
          description: Получены данные платежа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Платеж не найден
  /wallets:
    get:
      summary: Данные кошелька пользователя
      operationId: getWallet
      tags:
        - wallet
      parameters:
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Кошелек пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWallet'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Кошелек не найден
    post:
      summary: Создание кошелька
      operationId: createWallet
      tags:
        - wallet
      parameters:
        - $ref: '#/components/parameters/requestId'
      description: |
        Создание платежа.
      responses:
        '201':
          description: Кошелек успешно создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWallet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /account:
    get:
      summary: Получить информацию об аккаунте
      operationId: getAccount
      tags:
        - account
      parameters:
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Получена информация об аккаунте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Пользователь не найден
  /account/subscription:
    post:
      summary: Добавить подписку пользователю
      operationId: addAccountSubscription
      tags:
        - subscription
      parameters:
        - $ref: '#/components/parameters/requestId'
      description: >
        Добавить подписку пользователю. Если такая подписка уже была у
        пользователя, но ее срок истек, тогда будет продлена на указанный период
      requestBody:
        $ref: '#/components/requestBodies/AddAccountSubscription'
      responses:
        '200':
          description: Подписка успешно добавлена.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /subscriptions:
    get:
      summary: Список всех возможных продуктов и их подписок
      operationId: getSubscriptions
      tags:
        - subscription
      parameters:
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Получен список продуктов и подписок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSubscription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /subscriptions/{id}:
    get:
      summary: Информация о подписке
      operationId: getSubscription
      tags:
        - subscription
      parameters:
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/subscriptionResourceId'
      responses:
        '200':
          description: Получена информация о подписке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Подписка не найдена
components:
  securitySchemes:
    bearer:
      description: >
        Для аутентификации вызовов мы используем [JWT](https://jwt.io).
        Cоответствующий ключ передается в заголовке.

        ```shell
          Authorization: Bearer {TOKENIZATION|PRIVATE_JWT}
        ```
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    requestId:
      name: X-Request-ID
      in: header
      description: Уникальный идентификатор запроса к системе
      required: true
      schema:
        type: string
        format: uuid
    collectionLimit:
      name: limit
      in: query
      description: The collection items limit.
      schema:
        type: integer
        minimum: 0
        maximum: 1000
    collectionOffset:
      name: offset
      in: query
      description: The collection items offset.
      schema:
        type: integer
        minimum: 0
    idempotencyKey:
      name: Idempotency-Key
      in: header
      description: Idempotency key
      required: true
      schema:
        type: string
        format: uuid
    paymentResourceId:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PaymentId'
    subscriptionResourceId:
      name: id
      in: path
      required: true
      schema:
        description: Идентификатор подписки
        type: string
        format: uuid
        readOnly: true
  headers:
    Pagination-Total:
      description: Total items count.
      schema:
        type: integer
    Pagination-Limit:
      description: Items per page limit.
      schema:
        type: integer
    Pagination-Offset:
      description: Pagination offset.
      schema:
        type: integer
  schemas:
    CurrencyCode:
      type: string
      description: ISO 4217 alphabetic currency code.
      minLength: 3
      maxLength: 3
      example: RUB
    PaymentAmount:
      type: object
      properties:
        value:
          type: integer
          format: int64
          description: payment amount value (minor units)
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    AccountPayment:
      type: object
      properties:
        id:
          type: string
          description: payment id
        status:
          type: string
          enum:
            - pending
            - success
            - canceled
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        createdAt:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        status:
          type: integer
          minimum: 100
          maximum: 600
          description: The HTTP status code.
        error:
          type: string
        type:
          type: string
          description: >-
            A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)]
            that identifies the problem type. It should provide human-readable
            documentation for the problem type. When this member is not present,
            its value is assumed to be "about:blank".
        title:
          type: string
          description: >-
            A short, human-readable summary of the problem type. It SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization.
    PaymentId:
      description: Идентификатор платежа
      type: string
      format: uuid
      readOnly: true
    WalletBalance:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: wallet amount value (minor units)
    AccountWallet:
      type: object
      properties:
        id:
          type: string
          description: wallet id
        blocking:
          type: boolean
          default: false
        balance:
          $ref: '#/components/schemas/WalletBalance'
    ProductId:
      description: Идентификатор продукта
      type: string
      format: uuid
      readOnly: true
    SubscriptionId:
      description: Идентификатор подписки
      type: string
      format: uuid
      readOnly: true
    Account:
      type: object
      properties:
        email:
          type: string
        blocked:
          type: boolean
          default: false
        productSubscriptions:
          type: array
          items:
            type: object
            properties:
              productId:
                $ref: '#/components/schemas/ProductId'
              subscriptionId:
                $ref: '#/components/schemas/SubscriptionId'
              subscriptionLevel:
                type: integer
                format: int32
              validUntil:
                format: date-time
                type: string
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        level:
          type: integer
          description: level of subscription. From 1 to n where 1 is lowest level
        price:
          type: integer
          format: int64
    ProductSubscription:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        subscription:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
  responses:
    BadRequest:
      description: Переданы ошибочные данные
      content:
        application/json:
          schema:
            description: Ошибка в переданных данных
            type: object
            required:
              - code
            properties:
              code:
                type: string
                enum:
                  - invalidRequest
              message:
                type: string
    Unauthorized:
      description: Несанкционированный доступ, использовались неверные учетные данные.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Access forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    CreatePayment:
      content:
        application/json:
          schema:
            properties:
              amount:
                $ref: '#/components/schemas/PaymentAmount'
              description:
                description: payment description
                type: string
              return_url:
                type: string
                description: where to redirect user after payment complition
    AddAccountSubscription:
      content:
        application/json:
          schema:
            properties:
              productId:
                description: subscription production id
                type: string
              subscriptionId:
                description: subscription id
                type: string
              period:
                type: integer
                format: int32
                description: How long is the subscription. 1 period = 30 days
